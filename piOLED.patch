--- installPiOLED/pioled/stats.py	2023-03-19 15:28:30.214296192 +0900
+++ installPiOLEDMy/pioled/stats.py	2023-03-18 18:23:59.538352629 +0900
@@ -48,7 +48,7 @@
 
 def get_cpu_usage():
     # Shell scripts for system monitoring from here : https://unix.stackexchange.com/questions/119126/command-to-display-memory-usage-disk-usage-and-cpu-load
-    cmd = "top -bn1 | grep load | awk '{printf \"CPU Load: %.2f\", $(NF-2)}'"
+    cmd = "top -bn1 | grep load | awk '{printf \"CPU : %.2f\", $(NF-2)}'"
     CPU = subprocess.check_output(cmd, shell=True)
     return CPU
 
@@ -66,7 +66,7 @@
 
 # 128x32 display with hardware I2C:
 # setting gpio to 1 is hack to avoid platform detection
-disp = Adafruit_SSD1306.SSD1306_128_32(rst=None, i2c_bus=1, gpio=1)
+disp = Adafruit_SSD1306.SSD1306_128_64(rst=None, i2c_bus=1, gpio=1)
 
 # Initialize library.
 disp.begin()
@@ -113,27 +113,35 @@
     # Two examples here, wired and wireless
     draw.text((x, top),       "eth0: " +
               str(get_ip_address('eth0')),  font=font, fill=255)
-    # draw.text((x, top+8),     "wlan0: " + str(get_ip_address('wlan0')), font=font, fill=255)
+    draw.text((x, top+8),     "wl0 : " + str(get_ip_address('wlan0')), font=font, fill=255)
 
     # Alternate solution: Draw the GPU usage as text
-    # draw.text((x, top+8),     "GPU:  " +"{:3.1f}".format(GPU)+" %", font=font, fill=255)
+    cpu_usage = get_cpu_usage()
+    draw.text((x, top+16), cpu_usage.decode("utf-8"), font=font, fill=255)
+
+    # Alternate solution: Draw the GPU usage as text
+    gpu_usage = get_gpu_usage()
+    draw.text((x, top+24),     "GPU:  " +"{:3.1f}".format(gpu_usage)+" %", font=font, fill=255)
     # We draw the GPU usage as a bar graph
-    string_width, string_height = font.getsize("GPU:  ")
+    #string_width, string_height = font.getsize("GPU:  ")
     # Figure out the width of the bar
-    full_bar_width = width-(x+string_width)-1
-    gpu_usage = get_gpu_usage()
+    #full_bar_width = width-(x+string_width)-1
+    #gpu_usage = get_gpu_usage()
     # Avoid divide by zero ...
-    if gpu_usage == 0.0:
-        gpu_usage = 0.001
-    draw_bar_width = int(full_bar_width*(gpu_usage/100))
-    draw.text((x, top+8),     "GPU:  ", font=font, fill=255)
-    draw.rectangle((x+string_width, top+12, x+string_width +
-                    draw_bar_width, top+14), outline=1, fill=1)
+    #if gpu_usage == 0.0:
+    #    gpu_usage = 0.001
+    #draw_bar_width = int(full_bar_width*(gpu_usage/100))
+    #draw.text((x, top+16),     "GPU:  ", font=font, fill=255)
+    #draw.rectangle((x+string_width, top+20, x+string_width +
+    #                draw_bar_width, top+22), outline=1, fill=1)
 
     # Show the memory Usage
-    draw.text((x, top+16), str(MemUsage.decode('utf-8')), font=font, fill=255)
+    draw.text((x, top+32), str(MemUsage.decode('utf-8')), font=font, fill=255)
     # Show the amount of disk being used
-    draw.text((x, top+25), str(Disk.decode('utf-8')), font=font, fill=255)
+    draw.text((x, top+40), str(Disk.decode('utf-8')), font=font, fill=255)
+
+    # Show Logo 
+    draw.text((x, top+56), "Team Jessicar", font=font, fill=255)
 
     # Display image.
     # Set the SSD1306 image to the PIL image we have made, then dispaly
